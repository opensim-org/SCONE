cmake_minimum_required(VERSION 3.10.0)

project(scone)

# To create a folder hierarchy within Visual Studio.
set_property(GLOBAL PROPERTY USE_FOLDERS ON)

# compilation database for completion on Linux
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Find dependencies.
# ------------------
set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_SOURCE_DIR}/CMakeModules")

option(SCONE_OPENSIM_3 "Support OpenSim 3.3" ON)
option(SCONE_OPENSIM_4 "Support OpenSim 4.0 - EXPERIMENTAL" OFF)
option(SCONE_LUA "Support for lua scripting" OFF)
option(SCONE_HYFYDY "Support Hyfydy - EXPERIMENTAL" OFF)
option(SCONE_ENABLE_PROFILER "Enable SCONE profiler" ON)
option(SCONE_SCONESTUDIO_REQUIRED "Require that sconestudio is built" OFF)
option(SCONE_SCONESTUDIO "Build sconestudio" ON)
option(SCONE_EXPERIMENTAL_FEATURES "Enable experimental features" OFF)

# CMake has the ability to find Qt; we don't need to provide additional files.
# http://doc.qt.io/qt-5/cmake-manual.html
if (SCONE_SCONESTUDIO)
    find_package(Qt5 COMPONENTS Widgets OpenGL PrintSupport REQUIRED)
endif()

# Find TCLAP
find_path( TCLAP_DIR NAMES "tclap/CmdLine.h" PATHS "${CMAKE_SOURCE_DIR}/contrib/tclap-1.2.1/include" )

# Various settings
# ----------------
# Place build products (libraries, executables) in root
# binary (build) directory. Otherwise, they get scattered around
# the build directory and so the dll's aren't next to the executables.
#get_filename_component(CONFIG_NAME "${CMAKE_BINARY_DIR}" NAME)
#set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_SOURCE_DIR}/bin/${CONFIG_NAME}")
set(CMAKE_RUNTIME_OUTPUT_DIRECTORY "${CMAKE_BINARY_DIR}/bin")

# Silence CMake warning on OSX.
set(CMAKE_MACOSX_RPATH ON)

# Build lua if SCONE_LUA is set
if (SCONE_LUA)
	add_subdirectory(contrib/lua-5.3.5)
endif()

#
# Add submodules
#
add_subdirectory(submodules/xo)
add_subdirectory(submodules/spot)
if (SCONE_SCONESTUDIO)
    add_subdirectory(submodules/vis)
endif()

#
# Add targets
#
add_subdirectory(src/sconelib)
add_subdirectory(src/sconecmd)
add_subdirectory(src/sconestudio)
if (SCONE_SCONESTUDIO)
	add_subdirectory(src/sconeunittests)
endif()
if (SCONE_HYFYDY)
	find_path( SCONE_HYFYDY_DIR "sconehfd/sconehfd/ModelHfd.h" HINTS "../sconehfd" )
	add_subdirectory("${SCONE_HYFYDY_DIR}" "${CMAKE_BINARY_DIR}/sconehfd")
endif()

#
# Add tests
#
enable_testing()
if (XO_TEST_ENABLED)
	add_test( xo_test "${EXECUTABLE_OUTPUT_PATH}/xo_test")
endif()
add_test( scone_unit_tests "${EXECUTABLE_OUTPUT_PATH}/sconeunittests")
